{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-09-07T01:26:47.644786+00:00",
  "repo": "hiae-aead/draft-pham-hiae",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOO7UM1s6_qT9r",
      "title": "Finalization: bits vs bytes",
      "url": "https://github.com/hiae-aead/draft-pham-hiae/issues/1",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Both the paper and the specification define `len(x)` or `|x|` as being the length of `x` in *bits*.\n\nHowever, in the finalization function, both the C implementation and the test vectors assume that the length is in *bytes*.\n\nWe should probably use bits everywhere. \n\n/cc @ptmphuong12 ",
      "createdAt": "2025-07-09T11:09:11Z",
      "updatedAt": "2025-07-10T08:38:54Z",
      "closedAt": "2025-07-10T08:38:54Z",
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Fixed in the C implementation.",
          "createdAt": "2025-07-10T08:38:54Z",
          "updatedAt": "2025-07-10T08:38:54Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOO7UM1s6_vFI9",
      "title": "Batch updates",
      "url": "https://github.com/hiae-aead/draft-pham-hiae/issues/3",
      "state": "CLOSED",
      "author": "jedisct1",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Since the update function doesn't modify the entire state, it's faster to maintain a cycling index offset rather than rotate the entire state.\n\nThis is how current implementations handle it.\n\nFor this reason, word updates and state rotation are presented as separate steps, to highlight this potential optimization for implementers. This is also why `UpdateEnc` and `Enc` are defined as separate functions, allowing `UpdateEnc` to be reused for batch updates.\n\nHowever, it may be helpful to explicitly document this optimization. It's not urgent, though.",
      "createdAt": "2025-07-09T18:30:16Z",
      "updatedAt": "2025-07-18T20:00:18Z",
      "closedAt": "2025-07-18T20:00:18Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOO7UM1s7KGd9P",
      "title": "draft-pham-cfrg-hiae-02 Feedback",
      "url": "https://github.com/hiae-aead/draft-pham-hiae/issues/4",
      "state": "OPEN",
      "author": "samuel-lucas6",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Hi, I implemented HiAE in [C#](https://github.com/samuel-lucas6/HiAEDotNet) the other week (still needs a few tweaks) and thought I may as well do a full review of the draft since I've done that for AEGIS and Rocca-S. I didn't do any automated spelling/grammar checks though. Overall, it's very readable, with the things I've pointed out being minor corrections or suggestions/potential additions.\n\n## Introduction\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-1-6): some of the section numbers don't match the Table of Contents. I'd recommend getting rid of this section due to the Table of Contents.\n- No discussion of the benefits over other AEADs besides performance (and it's unclear how much faster HiAE is).\n\n## Conventions and Definitions\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-2-8.1.4): could mention that the Intel and ARM instructions are not the same despite the same parameters and [equivalent sounding](https://developer.arm.com/architectures/instruction-sets/intrinsics/vaeseq_u8) function descriptions. This is mentioned in Section 7, but it's important enough to mention here as well in my opinion in case people don't read that section.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-2-14): `Input and output values` potentially overlap with the next section.\n\n## The HiAE Algorithm\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.1-3.5.1): incorrect tag size of 32 bytes listed. `in bits:` also unnecessary because `bits` is stated at the end before the closing bracket.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.2-10): `xi` could be changed to `mi`.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.4.2.4-2): last comma can be removed.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.5.1-8): could replace `ZeroPad({ 0 }, 128)` with a constant like `C0`/`C1` that's just zeros. Or could define `{ 0 }` in Section 2.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.5.5-8): `ZeroPad(cn)` not matching Section 2 (no block size).\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-3.5.6-8): outer brackets aren't required for `t = (LE64(ad_len_bits) || LE64(msg_len_bits))`. I think it makes it less readable.\n\n## Alternative Operating Modes\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-5.1-3): maybe should reiterate that if the nonce is fixed, the key needs to be different each time or don't say the nonce is optional.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-5.1-9): could define `{ 0 }` in Section 2.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-5.2-10): could add spaces in the pseudocode like for other sections.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-5.2): could state that the encryption/decryption functions aren't required to implement the MAC.\n\n## Security Considerations\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-6.1-4): could say the key-committing security level (birthday bound), rephrase `everything-committing` to `context committing`, and say `it is not secure in the context committing setting` (the paper says it isn't).\n- Don't think `a single key may be used to protect at most 2^64 messages` is mentioned from the paper. Haven't read the paper in full yet, so there may be more that can be mentioned. There's limited usage guidance in this section.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-6.3-2.7.1): birthday bound security, and CMT1/CMT2 to `CMT-1`/`CMT-2`.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-6.3-2.8.1): could rephrase to `context committing` again, and CMT3 to `CMT-3`.\n- Haven't explicitly said that tag truncation isn't allowed.\n\n## Implementation Considerations\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.1): this initial paragraph has a lot of overlap with the `Cycling Index Approach` section.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.1.2): this subsection could be merged with the `Cycling Index Approach` section.\n- May be worth discussing bitwise AND instead of mod.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.2.1.3-2): `ZeroPad(cn)` not following Section 2.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.2.2): all the Intel-optimised implementations can have `xi`/`mi`/`ZeroPad(cn) ^ S9` put into `AESLX(y, z)`, not just `t`. Unless there's a reason not to do this.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.2.2.3-2): `ZeroPad(cn)` not following Section 2.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-7.2.2.4-4): top `t` could be put in `AESLX(y, z)`.\n- Could swap `DecPartial Function` and `UpdateDec Function` ordering for ARM and Intel because `DecPartial` relies on `UpdateDec`.\n- `XAESL()`, `XOR3()`, and `AESLX()` could have a space after each parameter separating `,`. More consistent with the rest of the document.\n\n## References\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-9.1): `[FIPS-AES]` reference is withdrawn so could be updated.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-9.2): for `[HiAE-Clarification]`, the authors should be listed in the same order as `[HiAE]`.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-9.2): `[NIST-LWC]` isn't used.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-9.2): for `[ROCCA-S]`, `Cryptology and Network Security (CANS 2023)` doesn't match the link.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#section-9.2): for `[SNOW-V]`, the title doesn't match the link.\n\n## Appendix A\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-A): no test vector(s) in Appendix A for the associated data padding.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-A): no mention of testing decryption failure and plaintext erasure.\n\n## Appendix B\n\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.7): this test vector fails with my implementation and the Go implementation. Haven't checked the other Appendix B test vectors.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.1): `Initial Values for Example` subsection could potentially be removed.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.3.1): no need for this `Example: Update` subsection.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.4-1): missing `the`, and `Initial State` is capitalised differently to other subsections.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.5-2): `updateEnc` capitalised incorrectly.\n- [Link](https://datatracker.ietf.org/doc/html/draft-pham-cfrg-hiae-02#appendix-B.6-2): can remove `all` and replace with `the`. I'd also move the `40 bits` figure to after `5 bytes`.",
      "createdAt": "2025-09-06T18:36:00Z",
      "updatedAt": "2025-09-06T18:36:00Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "PR_kwDOO7UM1s6eK3Em",
      "title": "Comprehensive documentation improvements",
      "url": "https://github.com/hiae-aead/draft-pham-hiae/pull/2",
      "state": "MERGED",
      "author": "jedisct1",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This commit significantly enhances the clarity and technical precision of the draft.\r\n\r\n- Restructured the specification using formal function definitions with clear inputs, outputs, and step-by-step procedures\r\n- Improved readability: Better organization with subsections for core functions, initialization, and processing\r\n- Security considerations: More explicit security requirements for constant-time operations and error handling\r\n- Test vectors: exercise more edge cases to catch implementation issues\r\n\r\nThese changes improve the document's suitability for IETF standardization by providing implementers with unambiguous specifications while maintaining consistency with existing IETF cryptographic algorithm descriptions.",
      "createdAt": "2025-07-09T18:19:50Z",
      "updatedAt": "2025-07-11T08:43:29Z",
      "baseRepository": "hiae-aead/draft-pham-hiae",
      "baseRefName": "main",
      "baseRefOid": "13b31268c1f5c7dd0fe6f3f5833df9958194ccf5",
      "headRepository": "hiae-aead/draft-pham-hiae",
      "headRefName": "ietf",
      "headRefOid": "23561c16f36996f9c718c1a422078cac7279252a",
      "closedAt": "2025-07-11T08:43:27Z",
      "mergedAt": "2025-07-11T08:43:27Z",
      "mergedBy": "jedisct1",
      "mergeCommit": {
        "oid": "c7c5da2926b3c5d0a0b04b548a4fa88b96627f36"
      },
      "comments": [
        {
          "author": "jedisct1",
          "authorAssociation": "CONTRIBUTOR",
          "body": "/cc @ptmphuong12 ",
          "createdAt": "2025-07-09T18:20:10Z",
          "updatedAt": "2025-07-09T18:20:10Z"
        },
        {
          "author": "jedisct1",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Let\u2019s merge this. We can tweak it or revert it later. It\u2019s probably already too late to update the datatracker document, but at least this will give people another reference document for the Hackathon.",
          "createdAt": "2025-07-11T08:43:21Z",
          "updatedAt": "2025-07-11T08:43:21Z"
        }
      ],
      "reviews": []
    }
  ]
}